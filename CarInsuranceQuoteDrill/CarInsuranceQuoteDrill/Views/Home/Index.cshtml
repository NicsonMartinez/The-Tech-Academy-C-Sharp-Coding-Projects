@model CarInsuranceQuoteDrill.Models.UserQuote

@{
    ViewBag.Title = "Get your Car Insurance Quote NOW!";
}

<div class="container">
    <h1>@ViewBag.Title</h1>
    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <div class="row">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            <label>First Name</label>
                            @*//NOTE:   My goal was for the form to keep values entered intact after submitting the form using the Post method and
                                        re-rendering that same form(They call it postbacks). I found this approach in this link:
                                        https://docs.microsoft.com/en-us/aspnet/web-pages/overview/ui-layouts-and-themes/4-working-with-forms*@
                            <input class="form-control" type="text" placeholder="First Name" name="FirstName" value="@Request.Form["FirstName"]">
                        </div>

                        <div class="form-group">
                            <label>Last Name</label>
                            <input class="form-control" type="text" placeholder="Last Name" name="LastName" value="@Request.Form["LastName"]">
                        </div>

                        <div class="form-group">
                            <label for="exampleInputEmail1">Email address</label>
                            <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email" name="EmailAddress" value="@Request.Form["EmailAddress"]">
                            <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                        </div>

                        <div class="form-group">
                            <label>Date of Birth</label>
                            <input class="form-control" type="text" placeholder="MM/DD/YYYY" name="DateOfBirth" value="@Request.Form["DateOfBirth"]">
                        </div>

                        <div class="form-group">
                            <label>Car Year</label>
                            <input class="form-control" type="text" placeholder="YYYY" name="CarYear" value="@Request.Form["CarYear"]">
                        </div>

                        <div class="form-group">
                            <label>Car Make</label>
                            <input class="form-control" type="text" placeholder="Car Make" name="CarMake" value="@Request.Form["CarMake"]">
                        </div>

                        <div class="form-group">
                            <label>Car Model</label>
                            <input class="form-control" type="text" placeholder="Car Model" name="CarModel" value="@Request.Form["CarModel"]">
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-body">

                        <div class="form-group">
                            <label>Did you ever have a DUI?</label>
                 
                            <div class="form-check">
                                @*//NOTE:   Here is a forum that lead me to find out how to restore radio button values after a post method:
                                            https://forums.asp.net/t/1625091.aspx*@
                                @*//NOTE:   The code, '@(Request["DUI"] == "Yes" ? " checked=\"checked\"" : "")' uses the conditional 
                                            operator '?:', which is known as the ternary conditional operator, and it is enclosed in an 
                                            'Explicit Razor Expression', which consist of an '@' symbol with balanced parenthesis - Any content
                                            within the @() parenthesis is evaluated and rendered to the output. 
                                  //NOTE:   The goal of the code is to render string 'checked="checked"' or "" (an empty string) inside of the <input> tag. Below, If the 
                                            request after the POST method on input with name="DUI" ( meaning, Request["DUI"] ) evaluates to "YES" then Razor   
                                            tag will reneder to 'checked="checked"' but if it evaluates to any other value (it returns false), then "" gets rendered.
                                            *@
                                <input class="form-check-input" type="radio" name="DUI" id="exampleRadios1" value="Yes" @(Request["DUI"] == "Yes" ? " checked=\"checked\"" : "")>
                                <label class="form-check-label" for="exampleRadios1">
                                    Yes
                                </label>
                            </div>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="DUI" id="exampleRadios1" value="No" @(Request["DUI"] == "No" ? " checked=\"checked\"" : "")>
                                <label class="form-check-label" for="exampleRadios1">
                                    No
                                </label>
                            </div>
                        </div>

                        <div class="form-group">
                            <label>How many tickets do you have?</label>
                            <input class="form-control" type="text" placeholder="Number of tickets" name="SpeedingTicketNum" value="@Request.Form["SpeedingTicketNum"]">
                        </div>

                        <div class="form-group">
                            <label>Which coverage would you like?</label>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="FullCoverageOrLiability" id="exampleRadios2" value="Full Coverage" @(Request["FullCoverageOrLiability"] == "Full Coverage" ? " checked=\"checked\"" : "")>
                                <label class="form-check-label" for="exampleRadios1">
                                    Full Coverage
                                </label>
                            </div>

                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="FullCoverageOrLiability" id="exampleRadios2" value="Liability" @(Request["FullCoverageOrLiability"] == "Liability" ? " checked=\"checked\"" : "")>
                                <label class="form-check-label" for="exampleRadios1">
                                    Liability
                                </label>
                            </div>

                        </div>
                        <button id="theButton" type="submit" class="btn btn-primary">Get Quote!</button>
                        <button id="theButton2" type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Index","Home")'">Clear</button>
                    </div>
                    <div class="card-body">
                        <div>
                            @*//NOTE: Here I wanted The tags below which reflect what the quote is, to only appear after a Post request.*@
                            @if (HttpContext.Current.Request.HttpMethod == "POST")
                            {
                                <p>Your estimated quote is: </p>
                                <h1>$@ViewBag.Quote/m</h1>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
